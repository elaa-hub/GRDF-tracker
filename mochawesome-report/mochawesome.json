{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-23T13:57:31.653Z",
    "end": "2025-06-23T13:57:38.080Z",
    "duration": 6427,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ac0de6e7-0be5-4067-b950-e1b49a0df961",
      "title": "",
      "fullFile": "C:\\Users\\GIGABYTE\\Desktop\\PFE GRDF-tracker\\GRDF\\selenium-tests\\login.spec.js",
      "file": "\\selenium-tests\\login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05ce2beb-1dcf-4f65-a2e5-64bb94d82fca",
          "title": "üß™ GRDF Client: Signaler une d√©faillance",
          "fullFile": "C:\\Users\\GIGABYTE\\Desktop\\PFE GRDF-tracker\\GRDF\\selenium-tests\\login.spec.js",
          "file": "\\selenium-tests\\login.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"üß™ GRDF Client: Signaler une d√©faillance\"",
              "fullTitle": "üß™ GRDF Client: Signaler une d√©faillance \"before all\" hook in \"üß™ GRDF Client: Signaler une d√©faillance\"",
              "timedOut": false,
              "duration": 2014,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const chromedriverPath = require('chromedriver').path;\nconst service = new chrome.ServiceBuilder(chromedriverPath);\nconst options = new chrome.Options();\noptions.setChromeBinaryPath('C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe');\noptions.addArguments('--no-sandbox');\noptions.addArguments('--disable-dev-shm-usage');\ndriver = await new Builder()\n  .forBrowser('chrome')\n  .setChromeService(service)\n  .setChromeOptions(options)\n  .build();",
              "err": {},
              "uuid": "840e286c-6fb1-44eb-988d-860ad5ccf39d",
              "parentUUID": "05ce2beb-1dcf-4f65-a2e5-64bb94d82fca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"üß™ GRDF Client: Signaler une d√©faillance\"",
              "fullTitle": "üß™ GRDF Client: Signaler une d√©faillance \"after all\" hook in \"üß™ GRDF Client: Signaler une d√©faillance\"",
              "timedOut": false,
              "duration": 91,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (driver) {\n  await driver.quit();\n}",
              "err": {},
              "uuid": "c942a835-52ff-446e-ad95-3c6df64a5268",
              "parentUUID": "05ce2beb-1dcf-4f65-a2e5-64bb94d82fca",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should login and signal a defaillance correctly",
              "fullTitle": "üß™ GRDF Client: Signaler une d√©faillance should login and signal a defaillance correctly",
              "timedOut": false,
              "duration": 4315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('http://localhost:4200');\nawait driver.findElement(By.name('email')).sendKeys('newclient@mail.com');\nawait driver.findElement(By.name('password')).sendKeys('12345');\nawait driver.findElement(By.css('button[type=\"submit\"]')).click();\nawait driver.wait(until.urlContains('/client'), 15000);\nconst defaillanceBtn = await driver.wait(\n  until.elementLocated(By.xpath(\"//button[contains(text(),'Signaler une d√©faillance')]\")),\n  5000\n);\nawait driver.wait(until.elementIsVisible(defaillanceBtn), 15000);\nawait driver.wait(until.elementIsEnabled(defaillanceBtn), 15000);\nawait driver.executeScript(\"arguments[0].scrollIntoView(true);\", defaillanceBtn);\nawait driver.executeScript(\"arguments[0].click();\", defaillanceBtn);\n// V√©rifie le changement d'URL\nawait driver.wait(until.urlContains('/client/report-issue'), 15000);\nconst adresseInput = await driver.findElement(By.id('houseAddress'));\nawait adresseInput.clear();\nawait adresseInput.sendKeys('Rue de la Tour, 75001 Paris');\nconst urgenceSelect = await driver.findElement(By.id('urgence'));\nawait urgenceSelect.click();\nawait driver.findElement(By.xpath(\"//option[contains(text(),'Non urgente')]\")).click();\nconst descTextArea = await driver.wait(until.elementLocated(By.id('description')), 15000);\nawait driver.wait(until.elementIsVisible(descTextArea), 15000);\nawait driver.wait(until.elementIsEnabled(descTextArea), 15000);\nawait driver.executeScript(`\n  const textarea = document.getElementById('description');\n  textarea.value = 'Probl√®me de fuite de gaz d√©tect√©';\n  textarea.dispatchEvent(new Event('input', { bubbles: true }));\n`);\nconst value = await driver.findElement(By.id('description')).getAttribute('value');\nconsole.log('üìù Champ description contient :', value);\nexpect(value).to.equal('Probl√®me de fuite de gaz d√©tect√©');\nconst submitBtn = await driver.findElement(By.css('button[type=\"submit\"]'));\nawait driver.wait(until.elementIsVisible(submitBtn), 15000);\nawait driver.wait(until.elementIsEnabled(submitBtn), 15000);\nawait driver.executeScript(\"arguments[0].click();\", submitBtn);\ntry {\n  await driver.wait(until.urlContains('/client/demander-technicien'), 30000);\n  const currentUrl = await driver.getCurrentUrl();\n  expect(currentUrl).to.include('/client/demander-technicien');\n  console.log(\"‚úÖ Formulaire soumis avec succ√®s !\");\n} catch (error) {\n  const currentUrl = await driver.getCurrentUrl();\n  console.error(\"‚ùå Erreur de soumission. URL actuelle :\", currentUrl);\n  throw error;\n}",
              "err": {},
              "uuid": "1094ac22-a741-4777-bd6d-115953796838",
              "parentUUID": "05ce2beb-1dcf-4f65-a2e5-64bb94d82fca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1094ac22-a741-4777-bd6d-115953796838"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4315,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}